<?php
// $Id$

require_once('Image/GraphViz.php');

function cck_schema_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array(
      'path' => 'admin/content/types/schema',
      'title' => t('Schema'),
      'type' => MENU_LOCAL_TASK,
      'callback' => 'cck_schema_redirect',
      'weight' => 10,
      'access' => TRUE,
    );
    $items[] = array(
      'path' => 'schema',
      'title' => t('CCK Schema'),
      'type' => MENU_CALLBACK,
      'callback' => 'cck_schema_render',
      'access' => TRUE,
    );
  } else {
  }

  return $items;
}

function cck_schema_redirect() {
  // FIXME: This redirection is due to a weird bug in the behaviour of the applet 
  // in the presence of Clean URLs *AND* the page's URL being located in an
  // existing admin section (e.g. admin/content/*). The symptom is that the applet
  // is unable to load the given SVG file. When this gets fixed, just change the menus
  // above such that admin/content/types/schema calls cck_schema_render() directly.
  drupal_goto('schema');
}

function cck_schema_render() {
  $G = new Image_Graphviz(TRUE);
  foreach (taxonomy_get_vocabularies() as $vid => $vocabulary) {
    $G->addNode($vid, array(
      'shape' => 'ellipse',
      'label' => $vocabulary->name,
      'URL' => url('admin/content/taxonomy/'.$vid),
    ));
  }
  foreach (content_types() as $type) {
    $fields = array();
    if ($type['has_title']) {
      $fields[] = '+ '.$type['title_label'].' (title) : text';
    }
    if ($type['has_body']) {
      $fields[] = '+ '.$type['body_label'].' (body) : text';
    }
    foreach ($type['fields'] as $key => $field) {
      $fields[] = '+ '.$field['widget']['label'].' ('.$key.') : '.$field['type'];
      if ($field['type'] == 'nodereference') {
        foreach (array_filter($field['referenceable_types']) as $ref) {
          $G->addEdge(array($type['type'] => $ref), array(
            'headlabel' => _cck_schema_nodereference_cardinality($field),
            'taillabel' => '0..*',
          ));
        }
      }
      if ($field['type'] == 'userreference') {
        $G->addEdge(array($type['type'] => 'users'), array(
          'headlabel' => _cck_schema_nodereference_cardinality($field),
          'taillabel' => '0..*',
        ));
      }
      foreach (taxonomy_get_vocabularies($type['type']) as $vid => $vocabulary) {
        $G->addEdge(array($type['type'] => $vid), array(
          'style' => 'dotted',
        ));
      }
    }
    $G->addNode($type['type'], array(
      'shape' => 'record',
      'label' => '{'.$type['name'].' ('.$type['type'].')|'.implode('\l', $fields).'\l}',
      'URL' => url('admin/content/types/'.$type['url_str']),
    ));
  }
  $G->addNode('users',array(
    'shape' => 'record',
    'label' => 'User',
  ));

  _cck_schema_relativity($G);

  $dot = <<<EOS
/*
 * @formats = png
 * @zgrviewer = TRUE
 */
EOS;
  $dot .= $G->fetch('dot');
  return graphviz_filter_process($dot);
}

function _cck_schema_nodereference_cardinality($field) {
  if ($field['required']) {
    if ($field['multiple']) {
      return '1..*';
    }
    else {
      return '1';
    }
  }
  else {
    if ($field['multiple']) {
      return '0..*';
    }
    else {
      return '0..1';
    }
  }
}

function _cck_schema_relativity(&$G) {
  if (!module_exists('relativity')) return;
  foreach (variable_get('relativity_allow_types', array()) as $type) {
    foreach (variable_get("relativity_type_$type", array()) as $child) {
      if ($child == 'default') continue;
      $G->addEdge(array($type => $child), array(
        'headlabel' => _cck_schema_relativity_cardinality($child),
        'taillabel' => '0..*',
        'style' => 'dashed',
      ));
    }
  }
}

function _cck_schema_relativity_cardinality($child) {
  switch (variable_get("relativity_parent_ord_$child", '')) {
  case 'any':
    return '0..*';
  case 'one':
    return '1';
  case 'none':
    return '0';
  case 'one or more':
    return '1..*';
  default:
    return '?';
  }
}

